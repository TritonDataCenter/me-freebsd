{
  "author": {
    "name": "Joyent, Inc. http://www.joyent.com"
  },
  "name": "smartdc",
  "description": "Client SDK and CLI for the Joyent SmartDataCenter API",
  "version": "6.5.7",
  "private": false,
  "homepage": "http://www.joyent.com/software/smartdatacenter",
  "repository": {
    "type": "git",
    "url": "git://github.com/joyent/node-smartdc.git"
  },
  "main": "lib/index.js",
  "engines": {
    "node": ">=0.8"
  },
  "directories": {
    "bin": "./bin",
    "lib": "./lib"
  },
  "dependencies": {
    "http-signature": "0.9.11",
    "lru-cache": "2.2.2",
    "nopt": "2.1.1",
    "restify": "2.3.4",
    "bunyan": "0.20.0",
    "ssh-agent": "0.1.0"
  },
  "devDependencies": {},
  "bin": {
    "sdc-addmachinetags": "bin/sdc-addmachinetags",
    "sdc-createinstrumentation": "bin/sdc-createinstrumentation",
    "sdc-createkey": "bin/sdc-createkey",
    "sdc-createmachine": "bin/sdc-createmachine",
    "sdc-createmachinesnapshot": "bin/sdc-createmachinesnapshot",
    "sdc-deleteinstrumentation": "bin/sdc-deleteinstrumentation",
    "sdc-deletekey": "bin/sdc-deletekey",
    "sdc-deletemachine": "bin/sdc-deletemachine",
    "sdc-deletemachinemetadata": "bin/sdc-deletemachinemetadata",
    "sdc-deletemachinesnapshot": "bin/sdc-deletemachinesnapshot",
    "sdc-deletemachinetag": "bin/sdc-deletemachinetag",
    "sdc-describeanalytics": "bin/sdc-describeanalytics",
    "sdc-getdataset": "bin/sdc-getdataset",
    "sdc-getinstrumentation": "bin/sdc-getinstrumentation",
    "sdc-getkey": "bin/sdc-getkey",
    "sdc-getmachine": "bin/sdc-getmachine",
    "sdc-getmachinemetadata": "bin/sdc-getmachinemetadata",
    "sdc-getmachinesnapshot": "bin/sdc-getmachinesnapshot",
    "sdc-getmachinetag": "bin/sdc-getmachinetag",
    "sdc-getmachineusage": "bin/sdc-getmachineusage",
    "sdc-getpackage": "bin/sdc-getpackage",
    "sdc-listdatacenters": "bin/sdc-listdatacenters",
    "sdc-listdatasets": "bin/sdc-listdatasets",
    "sdc-listinstrumentations": "bin/sdc-listinstrumentations",
    "sdc-listkeys": "bin/sdc-listkeys",
    "sdc-listmachines": "bin/sdc-listmachines",
    "sdc-listmachinesnapshots": "bin/sdc-listmachinesnapshots",
    "sdc-listmachinetags": "bin/sdc-listmachinetags",
    "sdc-listpackages": "bin/sdc-listpackages",
    "sdc-rebootmachine": "bin/sdc-rebootmachine",
    "sdc-resizemachine": "bin/sdc-resizemachine",
    "sdc-setup": "bin/sdc-setup",
    "sdc-startmachine": "bin/sdc-startmachine",
    "sdc-startmachinefromsnapshot": "bin/sdc-startmachinefromsnapshot",
    "sdc-stopmachine": "bin/sdc-stopmachine",
    "sdc-updatemachinemetadata": "bin/sdc-updatemachinemetadata"
  },
  "readme": "node-smartdc is a node.js client library for interacting with the Joyent\nSmartDataCenter API.  This package additionally contains a CLI you can use\nto write scripts encapsulating most common tasks.\n\n## Installation\n\nYou probably want to install this package globally, so the CLI commands are\nalways in your path.\n\n    npm install smartdc -g\n\n## Usage\n\n### CLI\n\nThere are CLI commands corresponding to almost every action available in the\nSmartDataCenter API; see the\n[Joyent CloudAPI documentation](http://apidocs.joyent.com/sdcapidoc/cloudapi/) for\ncomplete information, but to get started, you'll want to run the following:\n\n    sdc-setup\n\nThe `sdc-setup` command will prompt you for your username and password, and\nupload your SSH key.  All the rest of the CLI commands use your RSA private\nkey for signing requests to the API, rather than sending your password to the\nJoyent API.  Once you've run `sdc-setup` (and set the environment variables\nit indicates), you can provision a machine, and check it's status.  For example,\nhere's an example that creates a new node.js machine and tags it as a\n'test' machine, then you can grab the status a few times until it's `running`.\n\nNote this assumes you've also got [jsontool](https://github.com/trentm/json)\ninstalled:\n\n    sdc-createmachine -e nodejs -n demo -t group=test\n    ...\n    sdc-listmachines | json 0.state\n      provisioning\n    sdc-listmachines | json 0.state\n      provisioning\n    sdc-listmachines | json 0.state\n      running\n\nAt that point, you can ssh into the machine; try this:\n\n    ssh-add\n    ssh -A admin@`./sdc-listmachines | json 0.ips[0]`\n\nNote that we added your keys to the SSH agent, so that you can use the CLI\nseamlessly on your new SmartMachine. Once you've played around and are done,\nyou can dispose of it; shut it down, then poll until it's `stopped`.\n\n    sdc-listmachines | json 0.id | xargs sdc-stopmachine\n    sdc-listmachines | json 0.state\n      stopped\n    sdc-listmachines | json 0.id | xargs sdc-deletemachine\n\nThere's a lot more you can do, like manage snapshots, analytics, keys, tags,\netc.\n\n### Programmatic Usage\n\n    var fs = require('fs');\n    var smartdc = require('smartdc');\n\n    // Read in the SSH private key\n    var home = process.env.HOME;\n    var key = fs.readFileSync(home + '/.ssh/id_rsa', 'ascii');\n\n    var client = smartdc.createClient({\n      url: 'https://api.no.de',\n      key: key,\n      keyId: '/<your login here>/keys/id_rsa'\n    });\n\n    client.listMachines(function(err, machines) {\n      if (err) {\n        console.log('Unable to list machines: ' + e);\n\treturn;\n      }\n\n      machines.forEach(function(m) {\n        console.log('Machine: ' + JSON.stringify(m, null, 2));\n      });\n    });\n\nCheck out the source documentation for JSDocs on the API.\n\n## License\n\nMIT.\n\n## Bugs\n\nSee <https://github.com/joyent/node-smartdc/issues>.\n",
  "readmeFilename": "README.md",
  "_id": "smartdc@6.5.7",
  "_from": "smartdc@"
}
