#!/usr/local/bin/bash
#
# Copyright (c) 2013 Joyent Inc., All rights reserved.
#
# Script that will use mdata field hostname to set the systems hostname 
# This allows for customers to update the hostname of the system when running this script
# By default this script is called on each boot

# set system host name in this order
# 1) use /etc/hostname if it is not empty
# 2) use Mdata hostname if set
# 3) use what is sent from DHCP client to set hostname

# load common functions and vars
. /lib/smartdc/lib_smartdc_scripts.cfg

# if hostname is in /etc/rc.conf then we always use that first
rc_conf_hostname=$(grep 'hostname' /etc/rc.conf | cut -d '=' -f 2 | tr -d '"')

if [[ ! -z $rc_conf_hostname ]]; then
      lib_smartdc_info "Using hostname set in /etc/rc.conf to set system hostname to: $rc_conf_hostname"
      hostname "$rc_conf_hostname"
      exit 0
else
   lib_smartdc_info "/etc/rc.conf does not have a valid hostname"
fi 

mdata_hostname=$($MDATA_GET_BIN "hostname" 2>>/dev/console)
mdata_hostname_return=$?

# check for invalid chars in hostname
out=$(echo $mdata_hostname | grep '\ ' | wc -l)
if [[ $out -ge 1 ]]; then
   lib_smartdc_info "hostname ( $mdata_hostname ) has a space in it and is invalid"
   lib_smartdc_info "mdata hostname will not be used"
   mdata_hostname=''
fi

out=$(echo $mdata_hostname | grep '\_' | wc -l)
if [[ $out -ge 1 ]]; then
   lib_smartdc_info "hostname ( $mdata_hostname ) has an underscore ( _ ) in it and is invalid"
   lib_smartdc_info "mdata hostname will not be used"
   mdata_hostname=''
fi

out=$(echo $mdata_hostname | grep '[^[:alnum:]-]' | wc -l)
if [[ $out -ge 1 ]]; then
   lib_smartdc_info "hostname ( $mdata_hostname ) has an non-alphanumeric char in it and is invalid"
   lib_smartdc_info "mdata hostname will not be used"
   mdata_hostname=''
fi

if [ $mdata_hostname_return -eq 0 -a ! -z "$mdata_hostname" ]; then
   lib_smartdc_info "Metadata hostname set to $mdata_hostname"
   lib_smartdc_info "Setting hostname to $mdata_hostname"
   hostname "$mdata_hostname"
   out=$(echo $mdata_hostname | grep '\.' | wc -l)
   if [[ $out -ge 1 ]]; then
      lib_smartdc_info "hostname ( $mdata_hostname ) has a . in it and may be truncated at the first ."
   fi
else
      dhcp_hostname=$( hostname )
      lib_smartdc_info "Setting hostname ( $dhcp_hostname ) from what was received from DHCP server"
fi

exit 0
